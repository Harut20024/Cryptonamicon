{"ast":null,"code":"import { createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _createCommentVNode(\" <div class=\\\"flex mt-1\\\">\\n          <div v-for=\\\"coin in filteredCoins()\\\" :key=\\\"coin.Symbol\\\" class=\\\"mr-1\\\">\\n            <button\\n              @click=\\\"ticker = coin.Symbol\\\"\\n              class=\\\"my-1 inline-flex items-center py-2 px-4 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-full text-white bg-gray-600 hover:bg-gray-700 transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\\\"\\n            >\\n              {{ coin.Symbol }}\\n            </button>\\n          </div>\\n        </div>u \");\n}","map":{"version":3,"names":["_createCommentVNode"],"sources":["/home/harut/Desktop/cryptonomicon/src/componets/FinderCoins.vue"],"sourcesContent":["<template>\n       <!-- <div class=\"flex mt-1\">\n          <div v-for=\"coin in filteredCoins()\" :key=\"coin.Symbol\" class=\"mr-1\">\n            <button\n              @click=\"ticker = coin.Symbol\"\n              class=\"my-1 inline-flex items-center py-2 px-4 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-full text-white bg-gray-600 hover:bg-gray-700 transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\"\n            >\n              {{ coin.Symbol }}\n            </button>\n          </div>\n        </div>u -->\n</template>\n\n\n\n<script>\nexport default {\n  props: {\n    tickersName: {\n    type: String,\n    required: ''\n  }\n},\nmounted() {\n    const parentDiv = this.$parent.$refs.tickersName;\n    console.log(parentDiv); // This will log the div element from the parent.\n  },\ndata(){\n  \n},\nmethods:{\n  // filteredCoins() {\n  //     if (!tickersName) return;\n  //     return this.coinSymbols\n  //       .filter((coin) =>\n  //         coin.Symbol.toUpperCase().includes(tickersName.toUpperCase())\n  //       )\n  //       .slice(0, 6);\n  //   },\n}\n};\n</script>"],"mappings":";;SACOA,mBAAA,okBASY"},"metadata":{},"sourceType":"module","externalDependencies":[]}