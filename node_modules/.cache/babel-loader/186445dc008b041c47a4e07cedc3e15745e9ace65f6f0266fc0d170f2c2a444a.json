{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AddButton from \"./PlusSign.vue\";\nexport default {\n  components: {\n    AddButton\n  },\n  data() {\n    return {\n      ticker: \"\",\n      coinSymbols: []\n    };\n  },\n  methods: {\n    async add() {\n      if (this.tickers.some(t => t.name === this.ticker)) {\n        alert(\"Ticker already added\");\n        return;\n      }\n      const newItem = {\n        name: this.ticker.toUpperCase(),\n        value: \"-\"\n      };\n      this.tickers.push(newItem);\n      localStorage.setItem(\"cryptonimicon-list\", JSON.stringify(this.tickers));\n      this.ticker = \"\";\n      this.filter = \"\";\n      if (!this.updateInterval) {\n        this.updateInterval = setInterval(this.updateTickers, 2000);\n      }\n    },\n    filteredCoins() {\n      if (!this.ticker) return;\n      return this.coinSymbols.filter(coin => coin.Symbol.toUpperCase().includes(this.ticker.toUpperCase())).slice(0, 6);\n    }\n  },\n  async fetchCoins() {\n    try {\n      const response = await fetch(\"https://min-api.cryptocompare.com/data/all/coinlist?summary=true\");\n      const data = await response.json();\n      if (data.Response === \"Success\" && data.Data) {\n        this.coinSymbols = Object.values(data.Data);\n      }\n    } catch (error) {\n      console.error(\"Error fetching coins:\", error);\n    }\n  }\n};","map":{"version":3,"names":["AddButton","components","data","ticker","coinSymbols","methods","add","tickers","some","t","name","alert","newItem","toUpperCase","value","push","localStorage","setItem","JSON","stringify","filter","updateInterval","setInterval","updateTickers","filteredCoins","coin","Symbol","includes","slice","fetchCoins","response","fetch","json","Response","Data","Object","values","error","console"],"sources":["/home/harut/Desktop/cryptonomicon/src/componets/AddTicker.vue"],"sourcesContent":["<template>\n  <section>\n    <div class=\"flex\">\n      <div class=\"max-w-xs\">\n        <label for=\"wallet\" class=\"block text-sm font-medium text-gray-700\"\n          >Тикер</label\n        >\n        <div class=\"mt-1 relative rounded-md shadow-md\">\n          <input\n            v-model=\"ticker\"\n            @keydown.enter=\"add()\"\n            type=\"text\"\n            name=\"wallet\"\n            id=\"wallet\"\n            class=\"block w-full pr-10 border-gray-300 text-gray-900 focus:outline-none focus:ring-gray-500 focus:border-gray-500 sm:text-sm rounded-md\"\n            placeholder=\"Например DOGE\"\n          />\n        </div>\n        <div class=\"flex mt-1\">\n          <div v-for=\"coin in filteredCoins()\" :key=\"coin.Symbol\" class=\"mr-1\">\n            <button\n              @click=\"ticker = coin.Symbol\"\n              class=\"my-1 inline-flex items-center py-2 px-4 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-full text-white bg-gray-600 hover:bg-gray-700 transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\"\n            >\n              {{ coin.Symbol }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <AddButton />\n  </section>\n</template>\n\n<script>\nimport AddButton from \"./PlusSign.vue\";\nexport default {\n  components: {\n    AddButton,\n  },\n  data() {\n    return {\n      ticker: \"\",\n      coinSymbols: [],\n    };\n  },\n  methods: {\n    async add() {\n      if (this.tickers.some((t) => t.name === this.ticker)) {\n        alert(\"Ticker already added\");\n        return;\n      }\n\n      const newItem = { name: this.ticker.toUpperCase(), value: \"-\" };\n      this.tickers.push(newItem);\n\n      localStorage.setItem(\"cryptonimicon-list\", JSON.stringify(this.tickers));\n\n      this.ticker = \"\";\n      this.filter = \"\";\n\n      if (!this.updateInterval) {\n        this.updateInterval = setInterval(this.updateTickers, 2000);\n      }\n    },\n    filteredCoins() {\n      if (!this.ticker) return;\n      return this.coinSymbols\n        .filter((coin) =>\n          coin.Symbol.toUpperCase().includes(this.ticker.toUpperCase())\n        )\n        .slice(0, 6);\n    },\n  },\n  async fetchCoins() {\n      try {\n        const response = await fetch(\n          \"https://min-api.cryptocompare.com/data/all/coinlist?summary=true\"\n        );\n        const data = await response.json();\n        if (data.Response === \"Success\" && data.Data) {\n          this.coinSymbols = Object.values(data.Data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching coins:\", error);\n      }\n    },\n};\n</script>\n"],"mappings":";AAmCA,OAAOA,SAAQ,MAAO,gBAAgB;AACtC,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,GAAGA,CAAA,EAAG;MACV,IAAI,IAAI,CAACC,OAAO,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAG,KAAM,IAAI,CAACP,MAAM,CAAC,EAAE;QACpDQ,KAAK,CAAC,sBAAsB,CAAC;QAC7B;MACF;MAEA,MAAMC,OAAM,GAAI;QAAEF,IAAI,EAAE,IAAI,CAACP,MAAM,CAACU,WAAW,CAAC,CAAC;QAAEC,KAAK,EAAE;MAAI,CAAC;MAC/D,IAAI,CAACP,OAAO,CAACQ,IAAI,CAACH,OAAO,CAAC;MAE1BI,YAAY,CAACC,OAAO,CAAC,oBAAoB,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACZ,OAAO,CAAC,CAAC;MAExE,IAAI,CAACJ,MAAK,GAAI,EAAE;MAChB,IAAI,CAACiB,MAAK,GAAI,EAAE;MAEhB,IAAI,CAAC,IAAI,CAACC,cAAc,EAAE;QACxB,IAAI,CAACA,cAAa,GAAIC,WAAW,CAAC,IAAI,CAACC,aAAa,EAAE,IAAI,CAAC;MAC7D;IACF,CAAC;IACDC,aAAaA,CAAA,EAAG;MACd,IAAI,CAAC,IAAI,CAACrB,MAAM,EAAE;MAClB,OAAO,IAAI,CAACC,WAAU,CACnBgB,MAAM,CAAEK,IAAI,IACXA,IAAI,CAACC,MAAM,CAACb,WAAW,CAAC,CAAC,CAACc,QAAQ,CAAC,IAAI,CAACxB,MAAM,CAACU,WAAW,CAAC,CAAC,CAC9D,EACCe,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAChB;EACF,CAAC;EACD,MAAMC,UAAUA,CAAA,EAAG;IACf,IAAI;MACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAC1B,kEACF,CAAC;MACD,MAAM7B,IAAG,GAAI,MAAM4B,QAAQ,CAACE,IAAI,CAAC,CAAC;MAClC,IAAI9B,IAAI,CAAC+B,QAAO,KAAM,SAAQ,IAAK/B,IAAI,CAACgC,IAAI,EAAE;QAC5C,IAAI,CAAC9B,WAAU,GAAI+B,MAAM,CAACC,MAAM,CAAClC,IAAI,CAACgC,IAAI,CAAC;MAC7C;IACF,EAAE,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}