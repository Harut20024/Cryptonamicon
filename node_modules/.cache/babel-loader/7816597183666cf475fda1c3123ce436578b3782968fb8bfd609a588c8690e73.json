{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex mt-1\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredCoins(), coin => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: coin.Symbol,\n      class: \"mr-1\"\n    }, [_createElementVNode(\"button\", {\n      onClick: $event => _ctx.ticker = coin.Symbol,\n      class: \"my-1 inline-flex items-center py-2 px-4 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-full text-white bg-gray-600 hover:bg-gray-700 transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\"\n    }, _toDisplayString(coin.Symbol), 9 /* TEXT, PROPS */, _hoisted_2)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$options","filteredCoins","coin","key","Symbol","_createElementVNode","onClick","$event","_ctx","ticker","_hoisted_2"],"sources":["/home/harut/Desktop/cryptonomicon/src/componets/FinderCoins.vue"],"sourcesContent":["<template>\n       <div class=\"flex mt-1\">\n          <div v-for=\"coin in filteredCoins()\" :key=\"coin.Symbol\" class=\"mr-1\">\n            <button\n              @click=\"ticker = coin.Symbol\"\n              class=\"my-1 inline-flex items-center py-2 px-4 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-full text-white bg-gray-600 hover:bg-gray-700 transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\"\n            >\n              {{ coin.Symbol }}\n            </button>\n          </div>\n        </div>\n</template>\n\n\n\n<script>\nexport default {\n  props: {\n    tickersName: {\n    type: String,\n    required: true\n  }\n},\n\ndata(){\n  coinSymbols: ''\n},\nmethods:{\n  async fetchCoins() {\n      try {\n        const response = await fetch(\n          \"https://min-api.cryptocompare.com/data/all/coinlist?summary=true\"\n        );\n        const data = await response.json();\n        if (data.Response === \"Success\" && data.Data) {\n          this.coinSymbols = Object.values(data.Data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching coins:\", error);\n      }\n    },\n  filteredCoins() {\n      if (!tickersName) return;\n      return this.coinSymbols\n        .filter((coin) =>\n          coin.Symbol.toUpperCase().includes(tickersName.toUpperCase())\n        )\n        .slice(0, 6);\n    },\n}\n};\n</script>"],"mappings":";;EACYA,KAAK,EAAC;AAAW;;;uBAAtBC,mBAAA,CASO,OATPC,UASO,I,kBARJD,mBAAA,CAOME,SAAA,QAAAC,WAAA,CAPcC,QAAA,CAAAC,aAAa,IAArBC,IAAI;yBAAhBN,mBAAA,CAOM;MAPgCO,GAAG,EAAED,IAAI,CAACE,MAAM;MAAET,KAAK,EAAC;QAC5DU,mBAAA,CAKS;MAJNC,OAAK,EAAAC,MAAA,IAAEC,IAAA,CAAAC,MAAM,GAAGP,IAAI,CAACE,MAAM;MAC5BT,KAAK,EAAC;wBAEHO,IAAI,CAACE,MAAM,wBAAAM,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}